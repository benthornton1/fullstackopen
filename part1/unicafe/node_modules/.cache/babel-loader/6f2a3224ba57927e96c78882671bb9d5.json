{"ast":null,"code":"var _jsxFileName = \"/Users/benthornton/Desktop/FullStackOpenCourse/part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, text);\n\nconst Statistic = ({\n  text,\n  value,\n  symbol\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, text), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      'text-align': 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, value, \" \", symbol)));\n};\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  if (good != 0 || neutral != 0 || bad != 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Statistic, {\n      text: \"good\",\n      value: good,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"neutral\",\n      value: neutral,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"bad\",\n      value: bad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"all\",\n      value: good + neutral + bad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"average\",\n      value: (good + bad) / (good + neutral + bad),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"positive\",\n      value: good / (good + neutral + bad) * 100,\n      symbol: \"%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"No feedback given\");\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleGoodClick,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleNeutralClick,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: handleBadClick,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/benthornton/Desktop/FullStackOpenCourse/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","handleClick","text","Statistic","value","symbol","Statistics","good","neutral","bad","App","setGood","setNeutral","setBad","handleGoodClick","handleNeutralClick","handleBadClick","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = ({handleClick, text}) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Statistic = ({text, value, symbol}) => {\n  return (\n    <div>\n      <tr>\n        <td>{text}</td> \n        <td style={{'text-align': 'right'}}>{value} {symbol}</td>\n      </tr>\n    </div>\n  )\n}\n\nconst Statistics = ({good, neutral, bad}) => {\n  if(good != 0 || neutral != 0 || bad != 0){\n    return (\n      <div>\n        <table>\n          <Statistic text='good' value={good}/>\n          <Statistic text='neutral' value={neutral}/>\n          <Statistic text='bad' value={bad}/>\n          <Statistic text='all' value={good+neutral+bad}/>\n          <Statistic text='average' value={(good+bad)/(good+neutral+bad)}/>\n          <Statistic text='positive' value={(good/(good+neutral+bad))*100} symbol='%'/>\n        </table>\n      </div>\n    )\n  }\n  return (\n    <div>No feedback given</div>\n    )\n    \n  }\n  const App = () => {\n    // save clicks of each button to own state\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n    \n    const handleGoodClick = () => {\n      setGood(good + 1)\n    }\n    const handleNeutralClick = () => {\n      setNeutral(neutral + 1)\n    }\n    const handleBadClick = () => {\n      setBad(bad + 1)\n    }\n    return (\n      <div>\n      <h3>Give Feedback</h3>\n      <Button handleClick={handleGoodClick} text='good'/>\n      <Button handleClick={handleNeutralClick} text='neutral'/>\n      <Button handleClick={handleBadClick} text='good'/>\n      <h3>Statistics</h3>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}