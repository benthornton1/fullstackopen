{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Alert.js","services/person.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","addPerson","nameValue","nameOnChange","numberValue","numberOnChange","onSubmit","type","Person","person","handleRemove","name","number","onClick","Alert","alert","baseStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","errorStyle","color","notificationStyle","style","message","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","newAlert","setNewAlert","useEffect","personService","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","existingPerson","find","eP","window","confirm","uP","map","p","catch","error","setTimeout","concat","console","log","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.928bd367.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ value, onChange }) => (\n    <form>\n        filter shown with <input value={value} onChange={onChange}/>\n    </form>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addPerson, nameValue, nameOnChange, numberValue, numberOnChange}) => (\n    \n    <form onSubmit={addPerson}>\n        <div>\n            name: <input value={nameValue} onChange={nameOnChange} />\n        </div>\n        <div>\n            number: <input value={numberValue} onChange={numberOnChange} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ person, handleRemove }) => (\n        <div>\n            <li>\n                {person.name} {person.number}\n                <button onClick={handleRemove}>Delete</button>\n            </li>\n        </div>\n)\n\nexport default Person","import React from 'react'\n\nconst Alert = ({ alert }) => {\n    if (alert === null) {\n        return null\n    }\n\n    const baseStyle = {\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    const errorStyle = {...baseStyle, color: 'red'}\n    const notificationStyle = {...baseStyle, color: 'green'}\n\n    if (alert.type === 'error'){\n        return (\n            <div style={errorStyle}>\n                {alert.message}\n            </div>\n        )\n    }\n\n    return (\n        <div style={notificationStyle}>\n            {alert.message}\n        </div>\n    )\n}\n\nexport default Alert","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport Alert from './components/Alert'\nimport personService from './services/person'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newFilter, setNewFilter] = useState('')\n    const [newAlert, setNewAlert] = useState(null)\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(persons => {\n                setPersons(persons)\n            })\n    }, [])\n    \n    const addPerson = (event) => {\n        event.preventDefault()\n        const person = {\n            name: newName,\n            number: newNumber\n        }\n        const existingPerson = persons.find(eP => eP.name === person.name)\n        if (existingPerson) {\n            if (window.confirm(\n                    `${existingPerson.name} is already added to the phonebook, replace their old number with the new one?`\n                )\n            ){\n                personService\n                    .update(existingPerson.id, { ...existingPerson, number: person.number})\n                    .then(uP => {\n                        setPersons(persons.map(p => p.id !== uP.id ? p : uP))\n                    }).catch(error => {\n                        setNewAlert({\n                            message: `Information of ${existingPerson.name} was already removed from the server`,\n                            type: 'error'\n                        })\n                        setPersons(persons.filter(p => p.id !== existingPerson.id ))\n                        setTimeout(() => {\n                            setNewAlert(null)\n                        }, 5000)\n                    })\n            }\n        } else {\n            personService\n                .create(person)\n                .then(person => {\n                    setPersons(persons.concat(person))\n                    setNewAlert({\n                        message: `Added ${person.name}`,\n                        type: 'notification'\n                    })\n                    setTimeout(() => {\n                        setNewAlert(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    console.log(error)\n                    setNewAlert({\n                        message: error.response.data,\n                        type: 'error'\n                    })\n                    setTimeout(() => {\n                        setNewAlert(null)\n                    }, 5000)\n                })\n        }\n    }\n    const handleRemove = (person) => {\n        if (window.confirm(`Delete ${person.name}?`)){\n            personService\n                .remove(person.id)\n                .then(() => {\n                    setPersons(persons.filter(p => p.id !== person.id))\n                })\n        }\n    }\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value)\n    }\n\n    const personsToShow = newFilter\n        ? persons.filter(person => {\n            const lower = person.name.toLowerCase()\n            return lower.includes(newFilter.toLowerCase())\n        })\n        : persons\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Alert alert={newAlert} />\n            <Filter value={newFilter} onChange={handleFilterChange} />\n            <h2>add a new</h2>\n            <PersonForm addPerson={addPerson} nameValue={newName} nameOnChange={handleNameChange} numberValue={newNumber} numberOnChange={handleNumberChange}/>\n            <h2>Numbers</h2>\n            <ul>\n                {personsToShow.map(person =>\n                    <Person key={person.name} person={person} handleRemove={() => handleRemove(person)}/>\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}